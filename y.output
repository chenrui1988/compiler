Terminals which are not used

   '>'
   '<'


State 19 conflicts: 1 shift/reduce
State 65 conflicts: 10 shift/reduce
State 98 conflicts: 10 shift/reduce
State 133 conflicts: 10 shift/reduce


Grammar

    0 $accept: class $end

    1 class: CLASS_T TYPE '{' feature_list '}'

    2 feature_list: feature_list feature ';'
    3             | /* empty */

    4 feature: ID '(' formal_list ')' ':' typename '{' expr_list '}'
    5        | ID '(' ')' ':' typename '{' expr_list '}'
    6        | ID ':' typename
    7        | ID ':' typename ASSIGN simple_constant
    8        | ID ':' STRING_T ASSIGN STRING_CONST
    9        | ID ':' INT_T '[' ']'

   10 typename: INT_T
   11         | BOOL_T
   12         | STRING_T

   13 simple_constant: INT_CONST
   14                | TRUE_T
   15                | FALSE_T

   16 formal_list: formal_list ',' formal
   17            | formal

   18 formal: ID ':' typename
   19       | ID ':' INT_T '[' ']'

   20 expr: ID ASSIGN expr
   21     | ID '[' expr ']' ASSIGN expr
   22     | ID '(' ')'
   23     | IN_INT '(' ')'
   24     | OUT_STRING '(' expr ')'
   25     | OUT_INT '(' expr ')'
   26     | ID '(' actual_list ')'
   27     | ID
   28     | ID '[' expr ']'
   29     | IF_T expr THEN_T expr ELSE_T expr FI_T
   30     | WHILE_T expr LOOP_T expr POOL_T
   31     | '{' expr_list '}'
   32     | LET_T formal_list IN_T expr TEL_T
   33     | NEW_T INT_T '[' expr ']'
   34     | expr '+' expr
   35     | expr '-' expr
   36     | expr '*' expr
   37     | expr '/' expr
   38     | '~' expr
   39     | NOT_T expr
   40     | expr LT expr
   41     | expr LE expr
   42     | expr EQ expr
   43     | expr GT expr
   44     | expr GE expr
   45     | expr NE expr
   46     | '(' expr ')'
   47     | TRUE_T
   48     | FALSE_T
   49     | INT_CONST
   50     | STRING_CONST

   51 actual_list: actual_list ',' expr
   52            | expr

   53 expr_list: expr_list ';' expr
   54          | expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 4 5 22 23 24 25 26 46
')' (41) 4 5 22 23 24 25 26 46
'*' (42) 36
'+' (43) 34
',' (44) 16 51
'-' (45) 35
'/' (47) 37
':' (58) 4 5 6 7 8 9 18 19
';' (59) 2 53
'<' (60)
'>' (62)
'[' (91) 9 19 21 28 33
']' (93) 9 19 21 28 33
'{' (123) 1 4 5 31
'}' (125) 1 4 5 31
'~' (126) 38
error (256)
CLASS_T (258) 1
TYPE (259) 1
NEW_T (260) 33
INT_T (261) 9 10 19 33
BOOL_T (262) 11
STRING_T (263) 8 12
ASSIGN (264) 7 8 20 21
NOT_T (265) 39
IF_T (266) 29
THEN_T (267) 29
ELSE_T (268) 29
FI_T (269) 29
WHILE_T (270) 30
LOOP_T (271) 30
POOL_T (272) 30
LET_T (273) 32
IN_T (274) 32
TEL_T (275) 32
IN_INT (276) 23
OUT_INT (277) 25
OUT_STRING (278) 24
LT (279) 40
LE (280) 41
EQ (281) 42
GT (282) 43
GE (283) 44
NE (284) 45
INT_CONST (285) 13 49
STRING_CONST (286) 8 50
ID (287) 4 5 6 7 8 9 18 19 20 21 22 26 27 28
TRUE_T (288) 14 47
FALSE_T (289) 15 48
UMINUS (290)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
class (53)
    on left: 1, on right: 0
feature_list (54)
    on left: 2 3, on right: 1 2
feature (55)
    on left: 4 5 6 7 8 9, on right: 2
typename (56)
    on left: 10 11 12, on right: 4 5 6 7 18
simple_constant (57)
    on left: 13 14 15, on right: 7
formal_list (58)
    on left: 16 17, on right: 4 16 32
formal (59)
    on left: 18 19, on right: 16 17
expr (60)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
    38 39 40 41 42 43 44 45 46 47 48 49 50, on right: 20 21 24 25 28
    29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 51 52 53 54
actual_list (61)
    on left: 51 52, on right: 26 51
expr_list (62)
    on left: 53 54, on right: 4 5 31 53


state 0

    0 $accept: . class $end

    CLASS_T  shift, and go to state 1

    class  go to state 2


state 1

    1 class: CLASS_T . TYPE '{' feature_list '}'

    TYPE  shift, and go to state 3


state 2

    0 $accept: class . $end

    $end  shift, and go to state 4


state 3

    1 class: CLASS_T TYPE . '{' feature_list '}'

    '{'  shift, and go to state 5


state 4

    0 $accept: class $end .

    $default  accept


state 5

    1 class: CLASS_T TYPE '{' . feature_list '}'

    $default  reduce using rule 3 (feature_list)

    feature_list  go to state 6


state 6

    1 class: CLASS_T TYPE '{' feature_list . '}'
    2 feature_list: feature_list . feature ';'

    ID   shift, and go to state 7
    '}'  shift, and go to state 8

    feature  go to state 9


state 7

    4 feature: ID . '(' formal_list ')' ':' typename '{' expr_list '}'
    5        | ID . '(' ')' ':' typename '{' expr_list '}'
    6        | ID . ':' typename
    7        | ID . ':' typename ASSIGN simple_constant
    8        | ID . ':' STRING_T ASSIGN STRING_CONST
    9        | ID . ':' INT_T '[' ']'

    '('  shift, and go to state 10
    ':'  shift, and go to state 11


state 8

    1 class: CLASS_T TYPE '{' feature_list '}' .

    $default  reduce using rule 1 (class)


state 9

    2 feature_list: feature_list feature . ';'

    ';'  shift, and go to state 12


state 10

    4 feature: ID '(' . formal_list ')' ':' typename '{' expr_list '}'
    5        | ID '(' . ')' ':' typename '{' expr_list '}'

    ID   shift, and go to state 13
    ')'  shift, and go to state 14

    formal_list  go to state 15
    formal       go to state 16


state 11

    6 feature: ID ':' . typename
    7        | ID ':' . typename ASSIGN simple_constant
    8        | ID ':' . STRING_T ASSIGN STRING_CONST
    9        | ID ':' . INT_T '[' ']'

    INT_T     shift, and go to state 17
    BOOL_T    shift, and go to state 18
    STRING_T  shift, and go to state 19

    typename  go to state 20


state 12

    2 feature_list: feature_list feature ';' .

    $default  reduce using rule 2 (feature_list)


state 13

   18 formal: ID . ':' typename
   19       | ID . ':' INT_T '[' ']'

    ':'  shift, and go to state 21


state 14

    5 feature: ID '(' ')' . ':' typename '{' expr_list '}'

    ':'  shift, and go to state 22


state 15

    4 feature: ID '(' formal_list . ')' ':' typename '{' expr_list '}'
   16 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 23
    ','  shift, and go to state 24


state 16

   17 formal_list: formal .

    $default  reduce using rule 17 (formal_list)


state 17

    9 feature: ID ':' INT_T . '[' ']'
   10 typename: INT_T .

    '['  shift, and go to state 25

    $default  reduce using rule 10 (typename)


state 18

   11 typename: BOOL_T .

    $default  reduce using rule 11 (typename)


state 19

    8 feature: ID ':' STRING_T . ASSIGN STRING_CONST
   12 typename: STRING_T .

    ASSIGN  shift, and go to state 26

    ASSIGN    [reduce using rule 12 (typename)]
    $default  reduce using rule 12 (typename)


state 20

    6 feature: ID ':' typename .
    7        | ID ':' typename . ASSIGN simple_constant

    ASSIGN  shift, and go to state 27

    $default  reduce using rule 6 (feature)


state 21

   18 formal: ID ':' . typename
   19       | ID ':' . INT_T '[' ']'

    INT_T     shift, and go to state 28
    BOOL_T    shift, and go to state 18
    STRING_T  shift, and go to state 29

    typename  go to state 30


state 22

    5 feature: ID '(' ')' ':' . typename '{' expr_list '}'

    INT_T     shift, and go to state 31
    BOOL_T    shift, and go to state 18
    STRING_T  shift, and go to state 29

    typename  go to state 32


state 23

    4 feature: ID '(' formal_list ')' . ':' typename '{' expr_list '}'

    ':'  shift, and go to state 33


state 24

   16 formal_list: formal_list ',' . formal

    ID  shift, and go to state 13

    formal  go to state 34


state 25

    9 feature: ID ':' INT_T '[' . ']'

    ']'  shift, and go to state 35


state 26

    8 feature: ID ':' STRING_T ASSIGN . STRING_CONST

    STRING_CONST  shift, and go to state 36


state 27

    7 feature: ID ':' typename ASSIGN . simple_constant

    INT_CONST  shift, and go to state 37
    TRUE_T     shift, and go to state 38
    FALSE_T    shift, and go to state 39

    simple_constant  go to state 40


state 28

   10 typename: INT_T .
   19 formal: ID ':' INT_T . '[' ']'

    '['  shift, and go to state 41

    $default  reduce using rule 10 (typename)


state 29

   12 typename: STRING_T .

    $default  reduce using rule 12 (typename)


state 30

   18 formal: ID ':' typename .

    $default  reduce using rule 18 (formal)


state 31

   10 typename: INT_T .

    $default  reduce using rule 10 (typename)


state 32

    5 feature: ID '(' ')' ':' typename . '{' expr_list '}'

    '{'  shift, and go to state 42


state 33

    4 feature: ID '(' formal_list ')' ':' . typename '{' expr_list '}'

    INT_T     shift, and go to state 31
    BOOL_T    shift, and go to state 18
    STRING_T  shift, and go to state 29

    typename  go to state 43


state 34

   16 formal_list: formal_list ',' formal .

    $default  reduce using rule 16 (formal_list)


state 35

    9 feature: ID ':' INT_T '[' ']' .

    $default  reduce using rule 9 (feature)


state 36

    8 feature: ID ':' STRING_T ASSIGN STRING_CONST .

    $default  reduce using rule 8 (feature)


state 37

   13 simple_constant: INT_CONST .

    $default  reduce using rule 13 (simple_constant)


state 38

   14 simple_constant: TRUE_T .

    $default  reduce using rule 14 (simple_constant)


state 39

   15 simple_constant: FALSE_T .

    $default  reduce using rule 15 (simple_constant)


state 40

    7 feature: ID ':' typename ASSIGN simple_constant .

    $default  reduce using rule 7 (feature)


state 41

   19 formal: ID ':' INT_T '[' . ']'

    ']'  shift, and go to state 44


state 42

    5 feature: ID '(' ')' ':' typename '{' . expr_list '}'

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr       go to state 61
    expr_list  go to state 62


state 43

    4 feature: ID '(' formal_list ')' ':' typename . '{' expr_list '}'

    '{'  shift, and go to state 63


state 44

   19 formal: ID ':' INT_T '[' ']' .

    $default  reduce using rule 19 (formal)


state 45

   33 expr: NEW_T . INT_T '[' expr ']'

    INT_T  shift, and go to state 64


state 46

   39 expr: NOT_T . expr

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 65


state 47

   29 expr: IF_T . expr THEN_T expr ELSE_T expr FI_T

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 66


state 48

   30 expr: WHILE_T . expr LOOP_T expr POOL_T

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 67


state 49

   32 expr: LET_T . formal_list IN_T expr TEL_T

    ID  shift, and go to state 13

    formal_list  go to state 68
    formal       go to state 16


state 50

   23 expr: IN_INT . '(' ')'

    '('  shift, and go to state 69


state 51

   25 expr: OUT_INT . '(' expr ')'

    '('  shift, and go to state 70


state 52

   24 expr: OUT_STRING . '(' expr ')'

    '('  shift, and go to state 71


state 53

   49 expr: INT_CONST .

    $default  reduce using rule 49 (expr)


state 54

   50 expr: STRING_CONST .

    $default  reduce using rule 50 (expr)


state 55

   20 expr: ID . ASSIGN expr
   21     | ID . '[' expr ']' ASSIGN expr
   22     | ID . '(' ')'
   26     | ID . '(' actual_list ')'
   27     | ID .
   28     | ID . '[' expr ']'

    ASSIGN  shift, and go to state 72
    '('     shift, and go to state 73
    '['     shift, and go to state 74

    $default  reduce using rule 27 (expr)


state 56

   47 expr: TRUE_T .

    $default  reduce using rule 47 (expr)


state 57

   48 expr: FALSE_T .

    $default  reduce using rule 48 (expr)


state 58

   46 expr: '(' . expr ')'

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 75


state 59

   31 expr: '{' . expr_list '}'

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr       go to state 61
    expr_list  go to state 76


state 60

   38 expr: '~' . expr

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 77


state 61

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr
   54 expr_list: expr .

    LT   shift, and go to state 78
    LE   shift, and go to state 79
    EQ   shift, and go to state 80
    GT   shift, and go to state 81
    GE   shift, and go to state 82
    NE   shift, and go to state 83
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87

    $default  reduce using rule 54 (expr_list)


state 62

    5 feature: ID '(' ')' ':' typename '{' expr_list . '}'
   53 expr_list: expr_list . ';' expr

    '}'  shift, and go to state 88
    ';'  shift, and go to state 89


state 63

    4 feature: ID '(' formal_list ')' ':' typename '{' . expr_list '}'

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr       go to state 61
    expr_list  go to state 90


state 64

   33 expr: NEW_T INT_T . '[' expr ']'

    '['  shift, and go to state 91


state 65

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   39     | NOT_T expr .
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    LT   shift, and go to state 78
    LE   shift, and go to state 79
    EQ   shift, and go to state 80
    GT   shift, and go to state 81
    GE   shift, and go to state 82
    NE   shift, and go to state 83
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87

    LT        [reduce using rule 39 (expr)]
    LE        [reduce using rule 39 (expr)]
    EQ        [reduce using rule 39 (expr)]
    GT        [reduce using rule 39 (expr)]
    GE        [reduce using rule 39 (expr)]
    NE        [reduce using rule 39 (expr)]
    '+'       [reduce using rule 39 (expr)]
    '-'       [reduce using rule 39 (expr)]
    '*'       [reduce using rule 39 (expr)]
    '/'       [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


state 66

   29 expr: IF_T expr . THEN_T expr ELSE_T expr FI_T
   34     | expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    THEN_T  shift, and go to state 92
    LT      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    GT      shift, and go to state 81
    GE      shift, and go to state 82
    NE      shift, and go to state 83
    '+'     shift, and go to state 84
    '-'     shift, and go to state 85
    '*'     shift, and go to state 86
    '/'     shift, and go to state 87


state 67

   30 expr: WHILE_T expr . LOOP_T expr POOL_T
   34     | expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    LOOP_T  shift, and go to state 93
    LT      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    GT      shift, and go to state 81
    GE      shift, and go to state 82
    NE      shift, and go to state 83
    '+'     shift, and go to state 84
    '-'     shift, and go to state 85
    '*'     shift, and go to state 86
    '/'     shift, and go to state 87


state 68

   16 formal_list: formal_list . ',' formal
   32 expr: LET_T formal_list . IN_T expr TEL_T

    IN_T  shift, and go to state 94
    ','   shift, and go to state 24


state 69

   23 expr: IN_INT '(' . ')'

    ')'  shift, and go to state 95


state 70

   25 expr: OUT_INT '(' . expr ')'

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 96


state 71

   24 expr: OUT_STRING '(' . expr ')'

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 97


state 72

   20 expr: ID ASSIGN . expr

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 98


state 73

   22 expr: ID '(' . ')'
   26     | ID '(' . actual_list ')'

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    ')'           shift, and go to state 99
    '~'           shift, and go to state 60

    expr         go to state 100
    actual_list  go to state 101


state 74

   21 expr: ID '[' . expr ']' ASSIGN expr
   28     | ID '[' . expr ']'

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 102


state 75

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr
   46     | '(' expr . ')'

    LT   shift, and go to state 78
    LE   shift, and go to state 79
    EQ   shift, and go to state 80
    GT   shift, and go to state 81
    GE   shift, and go to state 82
    NE   shift, and go to state 83
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    ')'  shift, and go to state 103


state 76

   31 expr: '{' expr_list . '}'
   53 expr_list: expr_list . ';' expr

    '}'  shift, and go to state 104
    ';'  shift, and go to state 89


state 77

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   38     | '~' expr .
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    $default  reduce using rule 38 (expr)


state 78

   40 expr: expr LT . expr

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 105


state 79

   41 expr: expr LE . expr

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 106


state 80

   42 expr: expr EQ . expr

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 107


state 81

   43 expr: expr GT . expr

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 108


state 82

   44 expr: expr GE . expr

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 109


state 83

   45 expr: expr NE . expr

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 110


state 84

   34 expr: expr '+' . expr

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 111


state 85

   35 expr: expr '-' . expr

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 112


state 86

   36 expr: expr '*' . expr

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 113


state 87

   37 expr: expr '/' . expr

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 114


state 88

    5 feature: ID '(' ')' ':' typename '{' expr_list '}' .

    $default  reduce using rule 5 (feature)


state 89

   53 expr_list: expr_list ';' . expr

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 115


state 90

    4 feature: ID '(' formal_list ')' ':' typename '{' expr_list . '}'
   53 expr_list: expr_list . ';' expr

    '}'  shift, and go to state 116
    ';'  shift, and go to state 89


state 91

   33 expr: NEW_T INT_T '[' . expr ']'

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 117


state 92

   29 expr: IF_T expr THEN_T . expr ELSE_T expr FI_T

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 118


state 93

   30 expr: WHILE_T expr LOOP_T . expr POOL_T

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 119


state 94

   32 expr: LET_T formal_list IN_T . expr TEL_T

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 120


state 95

   23 expr: IN_INT '(' ')' .

    $default  reduce using rule 23 (expr)


state 96

   25 expr: OUT_INT '(' expr . ')'
   34     | expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    LT   shift, and go to state 78
    LE   shift, and go to state 79
    EQ   shift, and go to state 80
    GT   shift, and go to state 81
    GE   shift, and go to state 82
    NE   shift, and go to state 83
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    ')'  shift, and go to state 121


state 97

   24 expr: OUT_STRING '(' expr . ')'
   34     | expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    LT   shift, and go to state 78
    LE   shift, and go to state 79
    EQ   shift, and go to state 80
    GT   shift, and go to state 81
    GE   shift, and go to state 82
    NE   shift, and go to state 83
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    ')'  shift, and go to state 122


state 98

   20 expr: ID ASSIGN expr .
   34     | expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    LT   shift, and go to state 78
    LE   shift, and go to state 79
    EQ   shift, and go to state 80
    GT   shift, and go to state 81
    GE   shift, and go to state 82
    NE   shift, and go to state 83
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87

    LT        [reduce using rule 20 (expr)]
    LE        [reduce using rule 20 (expr)]
    EQ        [reduce using rule 20 (expr)]
    GT        [reduce using rule 20 (expr)]
    GE        [reduce using rule 20 (expr)]
    NE        [reduce using rule 20 (expr)]
    '+'       [reduce using rule 20 (expr)]
    '-'       [reduce using rule 20 (expr)]
    '*'       [reduce using rule 20 (expr)]
    '/'       [reduce using rule 20 (expr)]
    $default  reduce using rule 20 (expr)


state 99

   22 expr: ID '(' ')' .

    $default  reduce using rule 22 (expr)


state 100

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr
   52 actual_list: expr .

    LT   shift, and go to state 78
    LE   shift, and go to state 79
    EQ   shift, and go to state 80
    GT   shift, and go to state 81
    GE   shift, and go to state 82
    NE   shift, and go to state 83
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87

    $default  reduce using rule 52 (actual_list)


state 101

   26 expr: ID '(' actual_list . ')'
   51 actual_list: actual_list . ',' expr

    ')'  shift, and go to state 123
    ','  shift, and go to state 124


state 102

   21 expr: ID '[' expr . ']' ASSIGN expr
   28     | ID '[' expr . ']'
   34     | expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    LT   shift, and go to state 78
    LE   shift, and go to state 79
    EQ   shift, and go to state 80
    GT   shift, and go to state 81
    GE   shift, and go to state 82
    NE   shift, and go to state 83
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    ']'  shift, and go to state 125


state 103

   46 expr: '(' expr ')' .

    $default  reduce using rule 46 (expr)


state 104

   31 expr: '{' expr_list '}' .

    $default  reduce using rule 31 (expr)


state 105

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   40     | expr LT expr .
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87

    $default  reduce using rule 40 (expr)


state 106

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   41     | expr LE expr .
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87

    $default  reduce using rule 41 (expr)


state 107

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   42     | expr EQ expr .
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87

    $default  reduce using rule 42 (expr)


state 108

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   43     | expr GT expr .
   44     | expr . GE expr
   45     | expr . NE expr

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87

    $default  reduce using rule 43 (expr)


state 109

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   44     | expr GE expr .
   45     | expr . NE expr

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87

    $default  reduce using rule 44 (expr)


state 110

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr
   45     | expr NE expr .

    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87

    $default  reduce using rule 45 (expr)


state 111

   34 expr: expr . '+' expr
   34     | expr '+' expr .
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87

    $default  reduce using rule 34 (expr)


state 112

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   35     | expr '-' expr .
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    '*'  shift, and go to state 86
    '/'  shift, and go to state 87

    $default  reduce using rule 35 (expr)


state 113

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   36     | expr '*' expr .
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    $default  reduce using rule 36 (expr)


state 114

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   37     | expr '/' expr .
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    $default  reduce using rule 37 (expr)


state 115

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr
   53 expr_list: expr_list ';' expr .

    LT   shift, and go to state 78
    LE   shift, and go to state 79
    EQ   shift, and go to state 80
    GT   shift, and go to state 81
    GE   shift, and go to state 82
    NE   shift, and go to state 83
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87

    $default  reduce using rule 53 (expr_list)


state 116

    4 feature: ID '(' formal_list ')' ':' typename '{' expr_list '}' .

    $default  reduce using rule 4 (feature)


state 117

   33 expr: NEW_T INT_T '[' expr . ']'
   34     | expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    LT   shift, and go to state 78
    LE   shift, and go to state 79
    EQ   shift, and go to state 80
    GT   shift, and go to state 81
    GE   shift, and go to state 82
    NE   shift, and go to state 83
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87
    ']'  shift, and go to state 126


state 118

   29 expr: IF_T expr THEN_T expr . ELSE_T expr FI_T
   34     | expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    ELSE_T  shift, and go to state 127
    LT      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    GT      shift, and go to state 81
    GE      shift, and go to state 82
    NE      shift, and go to state 83
    '+'     shift, and go to state 84
    '-'     shift, and go to state 85
    '*'     shift, and go to state 86
    '/'     shift, and go to state 87


state 119

   30 expr: WHILE_T expr LOOP_T expr . POOL_T
   34     | expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    POOL_T  shift, and go to state 128
    LT      shift, and go to state 78
    LE      shift, and go to state 79
    EQ      shift, and go to state 80
    GT      shift, and go to state 81
    GE      shift, and go to state 82
    NE      shift, and go to state 83
    '+'     shift, and go to state 84
    '-'     shift, and go to state 85
    '*'     shift, and go to state 86
    '/'     shift, and go to state 87


state 120

   32 expr: LET_T formal_list IN_T expr . TEL_T
   34     | expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    TEL_T  shift, and go to state 129
    LT     shift, and go to state 78
    LE     shift, and go to state 79
    EQ     shift, and go to state 80
    GT     shift, and go to state 81
    GE     shift, and go to state 82
    NE     shift, and go to state 83
    '+'    shift, and go to state 84
    '-'    shift, and go to state 85
    '*'    shift, and go to state 86
    '/'    shift, and go to state 87


state 121

   25 expr: OUT_INT '(' expr ')' .

    $default  reduce using rule 25 (expr)


state 122

   24 expr: OUT_STRING '(' expr ')' .

    $default  reduce using rule 24 (expr)


state 123

   26 expr: ID '(' actual_list ')' .

    $default  reduce using rule 26 (expr)


state 124

   51 actual_list: actual_list ',' . expr

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 130


state 125

   21 expr: ID '[' expr ']' . ASSIGN expr
   28     | ID '[' expr ']' .

    ASSIGN  shift, and go to state 131

    $default  reduce using rule 28 (expr)


state 126

   33 expr: NEW_T INT_T '[' expr ']' .

    $default  reduce using rule 33 (expr)


state 127

   29 expr: IF_T expr THEN_T expr ELSE_T . expr FI_T

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 132


state 128

   30 expr: WHILE_T expr LOOP_T expr POOL_T .

    $default  reduce using rule 30 (expr)


state 129

   32 expr: LET_T formal_list IN_T expr TEL_T .

    $default  reduce using rule 32 (expr)


state 130

   34 expr: expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr
   51 actual_list: actual_list ',' expr .

    LT   shift, and go to state 78
    LE   shift, and go to state 79
    EQ   shift, and go to state 80
    GT   shift, and go to state 81
    GE   shift, and go to state 82
    NE   shift, and go to state 83
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87

    $default  reduce using rule 51 (actual_list)


state 131

   21 expr: ID '[' expr ']' ASSIGN . expr

    NEW_T         shift, and go to state 45
    NOT_T         shift, and go to state 46
    IF_T          shift, and go to state 47
    WHILE_T       shift, and go to state 48
    LET_T         shift, and go to state 49
    IN_INT        shift, and go to state 50
    OUT_INT       shift, and go to state 51
    OUT_STRING    shift, and go to state 52
    INT_CONST     shift, and go to state 53
    STRING_CONST  shift, and go to state 54
    ID            shift, and go to state 55
    TRUE_T        shift, and go to state 56
    FALSE_T       shift, and go to state 57
    '('           shift, and go to state 58
    '{'           shift, and go to state 59
    '~'           shift, and go to state 60

    expr  go to state 133


state 132

   29 expr: IF_T expr THEN_T expr ELSE_T expr . FI_T
   34     | expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    FI_T  shift, and go to state 134
    LT    shift, and go to state 78
    LE    shift, and go to state 79
    EQ    shift, and go to state 80
    GT    shift, and go to state 81
    GE    shift, and go to state 82
    NE    shift, and go to state 83
    '+'   shift, and go to state 84
    '-'   shift, and go to state 85
    '*'   shift, and go to state 86
    '/'   shift, and go to state 87


state 133

   21 expr: ID '[' expr ']' ASSIGN expr .
   34     | expr . '+' expr
   35     | expr . '-' expr
   36     | expr . '*' expr
   37     | expr . '/' expr
   40     | expr . LT expr
   41     | expr . LE expr
   42     | expr . EQ expr
   43     | expr . GT expr
   44     | expr . GE expr
   45     | expr . NE expr

    LT   shift, and go to state 78
    LE   shift, and go to state 79
    EQ   shift, and go to state 80
    GT   shift, and go to state 81
    GE   shift, and go to state 82
    NE   shift, and go to state 83
    '+'  shift, and go to state 84
    '-'  shift, and go to state 85
    '*'  shift, and go to state 86
    '/'  shift, and go to state 87

    LT        [reduce using rule 21 (expr)]
    LE        [reduce using rule 21 (expr)]
    EQ        [reduce using rule 21 (expr)]
    GT        [reduce using rule 21 (expr)]
    GE        [reduce using rule 21 (expr)]
    NE        [reduce using rule 21 (expr)]
    '+'       [reduce using rule 21 (expr)]
    '-'       [reduce using rule 21 (expr)]
    '*'       [reduce using rule 21 (expr)]
    '/'       [reduce using rule 21 (expr)]
    $default  reduce using rule 21 (expr)


state 134

   29 expr: IF_T expr THEN_T expr ELSE_T expr FI_T .

    $default  reduce using rule 29 (expr)
